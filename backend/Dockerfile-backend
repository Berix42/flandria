FROM python:3.9-slim-bullseye AS build

WORKDIR /home/flandria_user/flandria

# Setup virtual environment
RUN python -m venv venv
ENV PATH="/home/flandria_user/flandria/venv/bin:$PATH"

# Install requirements
COPY backend/requirements.txt .
RUN pip install -r requirements.txt
# Pillow requires special handelling
RUN pip uninstall -y Pillow

# Copy only needed files from local repository
COPY run_stack/wsgi.py ./
COPY backend/src/migrations migrations
COPY backend/src/database_updater database_updater
COPY backend/src/webapp webapp

FROM python:3.9-alpine

# Add new user for flandria-server
RUN adduser flandria_user --disabled-password --home /home/flandria_user
WORKDIR /home/flandria_user/flandria

# Copy only needed files from build-stage (including venv as a subfolder)
COPY --from=build --chown=flandria_user /home/flandria_user/flandria .

# Active virtual environment
ENV PATH="/home/flandria_user/flandria/venv/bin:$PATH"

# Install Pillow again on final image with all its dependencies
RUN apk update \
  && apk add --virtual build-dependencies gcc python3-dev musl-dev \
  && apk add jpeg-dev zlib-dev libjpeg \
  && pip install -r requirements.txt \
  && apk del build-dependencies

# Start webserver
# Replace Flask internal server with Gunicorn (application server) for productional usage
# See: https://www.toptal.com/flask/flask-production-recipes
USER flandria_user
EXPOSE 5000
CMD gunicorn --workers 8 --bind 0.0.0.0:5000 wsgi:app --max-requests 10000 --timeout 5 --keep-alive 5 --log-level info
